services:
  web:
    build: 
      context: .
      dockerfile: dockerfile
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - .:/app  # Монтирование текущей директории
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://skyhelper:NezoX228008!@db:5432/anonloader
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --timeout 120 --workers 3 file_sharing.wsgi:application --bind 0.0.0.0:8000"

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: anonloader
      POSTGRES_USER: skyhelper
      POSTGRES_PASSWORD: NezoX228008!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  anon_bot:
    build: .
    command: python manage.py anon
    depends_on:
      - db
      - web
    volumes:
      - .:/app
    restart: always
    environment:
      - ANON_BOT_KEY=${ANON_TOKEN}

  support_bot:
    build: .
    command: python manage.py support
    depends_on:
      - db
      - web
    volumes:
      - .:/app
    restart: always
    environment:
      - ANON_BOT_KEY=${ANON_SUPPORT_TOKEN} 

  redis:
    image: "redis:alpine"

  celery:
    build: .
    command: celery -A file_sharing worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
    restart: always

  flower:
    build: .
    command: celery -A file_sharing flower
    volumes:
      - .:/app
    depends_on:
      - celery
      - web
    ports:
      - "5555:5555"
    restart: always

  celery_beat:
    build: .
    command: celery -A file_sharing beat -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery
      - web
    restart: always

volumes:
  media_volume:
  static_volume:
  postgres_data:
