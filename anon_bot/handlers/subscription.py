from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ
async def subscription(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –¢–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –ø–æ–¥–ø–∏—Å–∫–∏
    subscription_text = (
        "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n\n"
        "1. –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ —Å—Å—ã–ª–æ–∫.\n"
        "2. –õ–∏–º–∏—Ç –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫: 100 —Å—Å—ã–ª–æ–∫ –≤ –¥–µ–Ω—å.\n"
        "3. –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –Ω–∏–∂–µ:"
    )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    keyboard = [
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å BTC", callback_data='pay_btc')],
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å USDT (TRC20)", callback_data='pay_usdt_trc20')],
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å USDT (ERC20)", callback_data='pay_usdt_erc20')],
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å ETH", callback_data='pay_eth')],
        [InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å Monero", callback_data='pay_xmr')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(subscription_text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã
async def handle_payment_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
    selected_payment_method = query.data

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    if selected_payment_method == 'pay_btc':
        await query.message.reply_text("–î–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ BTC –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: <BTC_ADDRESS>")
    elif selected_payment_method == 'pay_usdt_trc20':
        await query.message.reply_text("–î–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ USDT (TRC20) –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: <USDT_TRC20_ADDRESS>")
    elif selected_payment_method == 'pay_usdt_erc20':
        await query.message.reply_text("–î–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ USDT (ERC20) –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: <USDT_ERC20_ADDRESS>")
    elif selected_payment_method == 'pay_eth':
        await query.message.reply_text("–î–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ ETH –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: <ETH_ADDRESS>")
    elif selected_payment_method == 'pay_xmr':
        await query.message.reply_text("–î–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Monero –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–¥—Ä–µ—Å: <XMR_ADDRESS>")
    else:
        await query.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞.")