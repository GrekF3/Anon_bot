from telegram import Update
from telegram.ext import ContextTypes
from handlers.privacy_policy import privacy_policy
from handlers.link_generation import generate_link
from handlers.profile import profile
from handlers.subscription import subscription
from handlers.main_menu import show_main_menu
from db import get_user_profile
from config import API_URL

async def show_admin_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:

    user_id = update.message.from_user.id
    user_profile = get_user_profile(user_id=user_id)

    if user_profile['is_admin'] == True:
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤–º–µ—Å—Ç–æ –º–µ–Ω—é
        admin_link = f"{API_URL}/bot_admin_page/broadcast/"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL
        await update.message.reply_text(
            f"–í—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ:\n{admin_link}\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π."
        )
    else:
        pass

async def handle_user_input(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    user_profile = get_user_profile(user_id=user_id)  # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if user_profile and user_profile['is_blocked']:
        await update.message.reply_text(
            "–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–∏—Å–µ.\n–î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å @GrekF3"
        )
        return  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É

    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–º–µ–Ω—é
    state = context.user_data.get('state')

    if state == 'admin_menu':
        await show_admin_menu(update, context)
    else:
        # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        selected_option = update.message.text
        if selected_option == "üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É üîó":
            await generate_link(update, context)
        elif selected_option == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
            await profile(update, context)
        elif selected_option == "–ü–æ–¥–ø–∏—Å–∫–∞ üí∞" or selected_option == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π":
            await subscription(update, context)
        elif selected_option == "üìï –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ üìï":
            await privacy_policy(update, context)
        elif selected_option == "‚öô –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –º–µ–Ω—é ‚öô":
            await show_admin_menu(update,context)
        elif selected_option == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
            await show_main_menu(update)
        else:
            await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é.")


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º, —á—Ç–æ –∫–æ–ª–±–µ–∫ –±—ã–ª –ø–æ–ª—É—á–µ–Ω

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data['state'] = None  
    context.user_data['uploaded_content'] = None  # –£–±–∏—Ä–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.message.edit_text("–û—Ç–º–µ–Ω–µ–Ω–æ.") 